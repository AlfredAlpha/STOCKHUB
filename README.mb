README.md – StockHub Pixel Internet
Sobre o Projeto

StockHub é uma aplicação web desenvolvida para a Pixel Internet, com o objetivo de centralizar o registro e gerenciamento de modems, roteadores e outros equipamentos instalados nas residências dos clientes.

A solução visa melhorar a gestão de inventário e o atendimento ao cliente, oferecendo uma interface acessível, moderna e eficiente, alinhada à identidade visual da Pixel Internet.


Funcionalidades

Registro de Equipamentos: Cadastro de modems/roteadores com modelo, número de série, cliente e data de instalação.

Listagem Completa: Visualização de todos os equipamentos registrados.

Busca Avançada: Localize equipamentos por número de série ou nome do cliente.

Exclusão de Registros: Remoção segura de itens obsoletos ou com defeito.

Relatórios: Geração de relatórios em JSON para análise de dados e inventário.

Autenticação de Usuários: Controle de acesso via login (bcrypt para senhas seguras).

Acessibilidade: Interface responsiva, com cores de contraste baseadas na identidade visual da Pixel.

APIs REST: Endpoints básicos para integração futura com outros sistemas.

Preparado para Nuvem: Estrutura pronta para deploy em Render, Vercel ou Heroku.

Controle de Versão: Projeto versionado com Git/GitHub.


Tecnologias Utilizadas

Backend: Python (Flask)

Banco de Dados: MySQL

Frontend: HTML, CSS, JavaScript

Controle de Versão: Git/GitHub

API e Relatórios: Flask + JSON

Segurança: Flask-Bcrypt para autenticação

Deploy Futuro: Render / Vercel / Heroku


Pré-requisitos

Python 3.x

MySQL Server

Git

Instalação

Clone o Repositório

git clone https://github.com/AlfredAlpha/STOCKHUB.git
cd STOCKHUB


Instale as Dependências

pip install flask mysql-connector-python flask-bcrypt


Configure o Banco de Dados

CREATE DATABASE stockhub_db;
USE stockhub_db;

CREATE TABLE equipamentos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    modelo VARCHAR(100) NOT NULL,
    numero_serie VARCHAR(50) UNIQUE NOT NULL,
    cliente_nome VARCHAR(100) NOT NULL,
    data_instalacao DATE NOT NULL
);

CREATE TABLE usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL
);


No arquivo app.py, atualize as credenciais se necessário:

db_config = {
    'host': 'localhost',
    'user': 'root',
    'password': 'sua_senha',
    'database': 'stockhub_db'
}


Execute a Aplicação

python app.py


Acesse no navegador:
http://127.0.0.1:5000/


Design

Plano de Fundo: mascote oficial da Pixel Internet (vem-pra-pixel.png).

Cores: Azul e verde neon (cores do mascote).

Contraste: Cinza claro e branco para leitura acessível.

Responsividade: Layout adaptado para desktop e mobile.


Próximos Passos

Implementar edição de registros.

Criar relatórios de manutenção e inventário.

Melhorar dashboards com análise de dados.

Deploy em nuvem (Render, Vercel ou Heroku).


Contribuição

Faça um fork do repositório.

Crie uma branch para sua feature:

git checkout -b feature/nova-funcionalidade


Commit suas mudanças:

git commit -m "Adiciona nova funcionalidade"


Envie para o GitHub:

git push origin feature/nova-funcionalidade


Abra um Pull Request.


Licença

Este projeto é apenas um protótipo para uso universitário e não possui licença pública no momento.

Autoria

Desenvolvido por Alunos da UNIVESP - PI2 2025 - Ciências da Computação.